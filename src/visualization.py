import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
import plotly.express as px
import os

# –¢–∞–π–ª–∞–Ω —Ö–∞–¥–≥–∞–ª–∞—Ö —Ñ–æ–ª–¥–µ—Ä “Ø“Ø—Å–≥—ç—Ö
FIGURE_PATH = "reports/figures/"
os.makedirs(FIGURE_PATH, exist_ok=True)

def load_data():
    """”®–≥”©–≥–¥–ª–∏–π–≥ –∞—á–∞–∞–ª–∂ —É–Ω—à–∏—Ö"""
    df = pd.read_csv("data/processed/engineered_data.csv")
    return df

def plot_histogram(df):
    """Total Charges-–∏–π–Ω —Ç–∞—Ä—Ö–∞–ª—Ç—ã–Ω –≥—Ä–∞—Ñ–∏–∫"""
    plt.figure(figsize=(8,5))
    plt.hist(df["TotalCharges"].dropna(), bins=30, color="blue", alpha=0.7)
    plt.title("Total Charges-–∏–π–Ω —Ç–∞—Ä—Ö–∞–ª—Ç")
    plt.xlabel("Total Charges")
    plt.ylabel("–¢–æ–æ–Ω —Ö—ç–º–∂—ç—ç")
    plt.grid(True)
    plt.savefig(FIGURE_PATH + "histogram.png")
    plt.close()

def plot_churn_distribution(df):
    """Churn —Ö—É–≤—å —Ö—ç–º–∂—ç—ç–≥ —Ö–∞—Ä—É—É–ª–∞—Ö –±–∞–≥–∞–Ω–∞–Ω –≥—Ä–∞—Ñ–∏–∫"""
    plt.figure(figsize=(6,4))
    sns.countplot(x="Churn", hue="Churn", data=df, palette="coolwarm", legend=False)
    plt.title("Churn —Ö—É–≤—å —Ö—ç–º–∂—ç—ç")
    plt.xlabel("Churn")
    plt.ylabel("–¢–æ–æ–Ω —Ö—ç–º–∂—ç—ç")
    plt.savefig(FIGURE_PATH + "churn_distribution.png")
    plt.close()

def plot_boxplot(df):
    """Churn –±–æ–ª–æ–Ω Total Charges —Ö–∞—Ä—å—Ü—É—É–ª—Å–∞–Ω Boxplot"""
    plt.figure(figsize=(8,5))
    sns.boxplot(x="Churn", y="TotalCharges", data=df)
    plt.title("Total Charges vs Churn")
    plt.savefig(FIGURE_PATH + "boxplot.png")
    plt.close()

def plot_correlation_heatmap(df):
    """–ö–æ—Ä—Ä–µ–ª—è—Ü–∏–π–Ω –∑—É—Ä–∞–≥–ª–∞–ª (Heatmap)"""
    plt.figure(figsize=(10,6))
    sns.heatmap(df.corr(numeric_only=True), annot=True, cmap="coolwarm", fmt=".2f")
    plt.title("–ö–æ—Ä—Ä–µ–ª—è—Ü–∏–π–Ω –∑—É—Ä–∞–≥–ª–∞–ª")
    plt.savefig(FIGURE_PATH + "correlation_heatmap.png")
    plt.close()

def plot_pie_chart(df):
    """Churn —Ö—É–≤—å —Ö—ç–º–∂—ç—ç–≥ —Ö–∞—Ä—É—É–ª–∞—Ö Pie Chart"""
    fig = px.pie(df, names="Churn", title="Churn —Ö—É–≤—å —Ö—ç–º–∂—ç—ç", hole=0.4)
    fig.write_image(FIGURE_PATH + "pie_chart.png")

def plot_scatter(df):
    """Monthly Charges vs Total Charges —Ö–∞—Ä—å—Ü—É—É–ª—Å–∞–Ω Scatter Plot"""
    fig = px.scatter(df, x="MonthlyCharges", y="TotalCharges", color="Churn",
                     title="Monthly Charges vs Total Charges", opacity=0.7)
    fig.write_image(FIGURE_PATH + "scatter_plot.png")

def generate_visualizations():
    """–ë“Ø—Ö –≥—Ä–∞—Ñ–∏–∫–∏–π–≥ “Ø“Ø—Å–≥—ç–∂ —Ö–∞–¥–≥–∞–ª–∞—Ö"""
    print("üìä –î“Ø—Ä—Å–ª—ç–ª“Ø“Ø–¥ “Ø“Ø—Å–≥—ç–∂ –±–∞–π–Ω–∞...")
    
    df = load_data()
    
    plot_histogram(df)
    plot_churn_distribution(df)
    plot_boxplot(df)
    plot_correlation_heatmap(df)
    plot_pie_chart(df)
    plot_scatter(df)

    print("–ë“Ø—Ö –¥“Ø—Ä—Å–ª—ç–ª `reports/figures/` —Ñ–æ–ª–¥–µ—Ä—Ç —Ö–∞–¥–≥–∞–ª–∞–≥–¥–ª–∞–∞!")

if __name__ == "__main__":
    generate_visualizations()
